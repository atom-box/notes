? can u make this a clickable, top-indexed fastly/jeckyl/static deploy using Github easiest tools or changelog dude?

BASICS-blueNB
=============
All work:
* $foo = (string) 42;
* $foo = 42;
* $foo = (float) "42abc";
Check types:
* gettype();
* is_string();
* die(" ");   and  exit(" ");   are the same.
* $$foo is not a typo; it's a multiline variable
* 
* 


Operator precedence:
====================
&& before ||
%  before +
=== before && and ||

STRINGS
=======
* HEREDOC is a multiline quote
* 
* 
* 
* 
* 
* 
* 
* 
* 

IMPORTANT: SEE ALSO THE BELOW
cross reference: wordpress.txt


PRINT_R Array 
  ( 
  [0] => 400 
  [id] => 400 

  [1] => Spartan 
  [username] => Spartan 

  [2] => Klondike 
  [password] => Klondike 

  [3] => Margret 
  [firstname] => Margret 

  [4] => Schweigertfelderstein 
  [lastname] => Schweigertfelderstein ) 
  true 

GET_OBJECT_VARS($THIS)

PHP Array Functions  
===================

https://www.w3schools.com/PHP/php_ref_array.asp
Function  Description
array()   Creates an array
array_change_key_case()   Changes all keys in an array to lowercase or uppercase
array_chunk()   Splits an array into chunks of arrays
array_column()  Returns the values from a single column in the input array
array_combine()   Creates an array by using the elements from one "keys" array and one "values" array
array_count_values()  Counts all the values of an array
array_diff()  Compare arrays, and returns the differences (compare values only)
array_diff_assoc()  Compare arrays, and returns the differences (compare keys and values)
array_diff_key()  Compare arrays, and returns the differences (compare keys only)
array_diff_uassoc()   Compare arrays, and returns the differences (compare keys and values, using a user-defined key comparison function)
array_diff_ukey()   Compare arrays, and returns the differences (compare keys only, using a user-defined key comparison function)
array_fill()  Fills an array with values
array_fill_keys()   Fills an array with values, specifying keys
array_filter()  Filters the values of an array using a callback function
array_flip()  Flips/Exchanges all keys with their associated values in an array
array_intersect()   Compare arrays, and returns the matches (compare values only)
array_intersect_assoc()   Compare arrays and returns the matches (compare keys and values)
array_intersect_key()   Compare arrays, and returns the matches (compare keys only)
array_intersect_uassoc()  Compare arrays, and returns the matches (compare keys and values, using a user-defined key comparison function)
array_intersect_ukey()  Compare arrays, and returns the matches (compare keys only, using a user-defined key comparison function)
array_key_exists()  Checks if the specified key exists in the array
array_keys()  Returns all the keys of an array
array_map()   Sends each value of an array to a user-made function, which returns new values
array_merge()   Merges one or more arrays into one array
array_merge_recursive()   Merges one or more arrays into one array recursively
array_multisort()   Sorts multiple or multi-dimensional arrays
array_pad()   Inserts a specified number of items, with a specified value, to an array
array_pop()   Deletes the last element of an array
array_product()   Calculates the product of the values in an array
array_push()  Inserts one or more elements to the end of an array
array_rand()  Returns one or more random keys from an array
array_reduce()  Returns an array as a string, using a user-defined function
array_replace()   Replaces the values of the first array with the values from following arrays
array_replace_recursive()   Replaces the values of the first array with the values from following arrays recursively
array_reverse()   Returns an array in the reverse order
array_search()  Searches an array for a given value and returns the key
array_shift()   Removes the first element from an array, and returns the value of the removed element
array_slice()   Returns selected parts of an array
array_splice()  Removes and replaces specified elements of an array
array_sum()   Returns the sum of the values in an array
array_udiff()   Compare arrays, and returns the differences (compare values only, using a user-defined key comparison function)
array_udiff_assoc()   Compare arrays, and returns the differences (compare keys and values, using a built-in function to compare the keys and a user-defined function to compare the values)
array_udiff_uassoc()  Compare arrays, and returns the differences (compare keys and values, using two user-defined key comparison functions)
array_uintersect()  Compare arrays, and returns the matches (compare values only, using a user-defined key comparison function)
array_uintersect_assoc()  Compare arrays, and returns the matches (compare keys and values, using a built-in function to compare the keys and a user-defined function to compare the values)
array_uintersect_uassoc()   Compare arrays, and returns the matches (compare keys and values, using two user-defined key comparison functions)
array_unique()  Removes duplicate values from an array
array_unshift()   Adds one or more elements to the beginning of an array
array_values()  Returns all the values of an array
array_walk()  Applies a user function to every member of an array
array_walk_recursive()  Applies a user function recursively to every member of an array
arsort()  Sorts an associative array in descending order, according to the value
asort()   Sorts an associative array in ascending order, according to the value
compact()   Create array containing variables and their values
count()   Returns the number of elements in an array
current()   Returns the current element in an array
each()  Deprecated from PHP 7.2. Returns the current key and value pair from an array
end()   Sets the internal pointer of an array to its last element
extract()   Imports variables into the current symbol table from an array
in_array()  Checks if a specified value exists in an array
key()   Fetches a key from an array
krsort()  Sorts an associative array in descending order, according to the key
ksort()   Sorts an associative array in ascending order, according to the key
list()  Assigns variables as if they were an array
natcasesort()   Sorts an array using a case insensitive "natural order" algorithm
natsort()   Sorts an array using a "natural order" algorithm
next()  Advance the internal array pointer of an array
pos()   Alias of current()
prev()  Rewinds the internal array pointer
range()   Creates an array containing a range of elements
reset()   Sets the internal pointer of an array to its first element
rsort()   Sorts an indexed array in descending order
shuffle()   Shuffles an array
sizeof()  Alias of count()
sort()  Sorts an indexed array in ascending order
uasort()  Sorts an array by values using a user-defined comparison function
uksort()  Sorts an array by keys using a user-defined comparison function
usort()   Sorts an array using a user-defined comparison function
------------------------------------


PHP MySQLi Functions
====================

Function  Description
affected_rows()   Returns the number of affected rows in the previous MySQL operation
autocommit()  Turns on or off auto-committing database modifications
begin_transaction()   Starts a transaction
change_user()   Changes the user of the specified database connection
character_set_name()  Returns the default character set for the database connection
close()   Closes a previously opened database connection
commit()  Commits the current transaction
connect()   Opens a new connection to the MySQL server
connect_errno()   Returns the error code from the last connection error
connect_error()   Returns the error description from the last connection error
data_seek()   Adjusts the result pointer to an arbitrary row in the result-set
debug()   Performs debugging operations
dump_debug_info()   Dumps debugging info into the log
errno()   Returns the last error code for the most recent function call
error()   Returns the last error description for the most recent function call
error_list()  Returns a list of errors for the most recent function call
fetch_all()   Fetches all result rows as an associative array, a numeric array, or both
fetch_array()   Fetches a result row as an associative, a numeric array, or both
fetch_assoc()   Fetches a result row as an associative array
fetch_field()   Returns the next field in the result-set, as an object
fetch_field_direct()  Returns meta-data for a single field in the result-set, as an object
fetch_fields()  Returns an array of objects that represent the fields in a result-set
fetch_lengths()   Returns the lengths of the columns of the current row in the result-set
fetch_object()  Returns the current row of a result-set, as an object
fetch_row()   Fetches one row from a result-set and returns it as an enumerated array
field_count()   Returns the number of columns for the most recent query
field_seek()  Sets the field cursor to the given field offset
get_charset()   Returns a character set object
get_client_info()   Returns the MySQL client library version
get_client_stats()  Returns statistics about client per-process
get_client_version()  Returns the MySQL client library version as an integer
get_connection_stats()  Returns statistics about the client connection
get_host_info()   Returns the MySQL server hostname and the connection type
get_proto_info()  Returns the MySQL protocol version
get_server_info()   Returns the MySQL server version
get_server_version()  Returns the MySQL server version as an integer
info()  Returns information about the last executed query
init()  Initializes MySQLi and returns a resource for use with real_connect()
insert_id()   Returns the auto-generated id from the last query
kill()  Asks the server to kill a MySQL thread
more_results()  Checks if there are more results from a multi query
multi_query()   Performs one or more queries on the database
next_result()   Prepares the next result-set from multi_query()
options()   Sets extra connect options and affect behavior for a connection
ping()  Pings a server connection, or tries to reconnect if the connection has gone down
poll()  Polls connections
prepare()   Prepares an SQL statement for execution
query()   Performs a query against a database
real_connect()  Opens a new connection to the MySQL server
real_escape_string()  Escapes special characters in a string for use in an SQL statement
real_query()  Executes a single SQL query
reap_async_query()  Returns result from an async SQL query
refresh()   Refreshes/flushes tables or caches, or resets the replication server information
rollback()  Rolls back the current transaction for the database
select_db()   Select the default database for database queries
set_charset()   Sets the default client character set
set_local_infile_default()  Unsets user defined handler for load local infile command
set_local_infile_handler()  Set callback function for LOAD DATA LOCAL INFILE command
sqlstate()  Returns the SQLSTATE error code for the last MySQL operation
ssl_set()   Used to establish secure connections using SSL
stat()  Returns the current system status
stmt_init()   Initializes a statement and returns an object for use with mysqli_stmt_prepare()
store_result()  Transfers a result set from the last query
thread_id()   Returns the thread ID for the current connection
thread_safe()   Returns whether the client library is compiled as thread-safe
use_result()  Initiates the retrieval of a result set from the last query executed using the real_query()
warning_count()   Returns the number of warnings from the last query in the connection
:::::::::::::::::::::::::::::::::::::::::
CONFIG for files  in PHP (with Runtime Configuration)
The behavior of the filesystem functions is affected by settings in php.ini.
Name  Default   Description   Changeable
allow_url_fopen   "1"   Allows fopen()-type functions to work with URLs   PHP_INI_SYSTEM
allow_url_include   "0"   (available since PHP 5.2)   PHP_INI_SYSTEM
user_agent  NULL  Defines the user agent for PHP to send (available since PHP 4.3)  PHP_INI_ALL
default_socket_timeout  "60"  Sets the default timeout, in seconds, for socket based streams (available since PHP 4.3)  PHP_INI_ALL
from  ""  Defines the email address to be used on unauthenticated FTP connections and in the From header for HTTP connections when using ftp and http wrappers  PHP_INI_ALL
-------



PHP Filesystem
==============

Function  Description
basename()  Returns the filename component of a path
chgrp()   Changes the file group
chmod()   Changes the file mode
chown()   Changes the file owner
clearstatcache()  Clears the file status cache
copy()  Copies a file
delete()  See unlink()
dirname()   Returns the directory name component of a path
disk_free_space()   Returns the free space of a filesystem or disk
disk_total_space()  Returns the total size of a filesystem or disk
diskfreespace()   Alias of disk_free_space()
fclose()  Closes an open file
feof()  Checks if the "end-of-file" (EOF) has been reached for an open file
fflush()  Flushes buffered output to an open file
fgetc()   Returns a single character from an open file
fgetcsv()   Returns a line from an open CSV file
fgets()   Returns a line from an open file
fgetss()  Deprecated from PHP 7.3. Returns a line from an open file - stripped from HTML and PHP tags
file()  Reads a file into an array
file_exists()   Checks whether or not a file or directory exists
file_get_contents()   Reads a file into a string
file_put_contents()   Writes data to a file
fileatime()   Returns the last access time of a file
filectime()   Returns the last change time of a file
filegroup()   Returns the group ID of a file
fileinode()   Returns the inode number of a file
filemtime()   Returns the last modification time of a file
fileowner()   Returns the user ID (owner) of a file
fileperms()   Returns the file's permissions
filesize()  Returns the file size
filetype()  Returns the file type
flock()   Locks or releases a file
fnmatch()   Matches a filename or string against a specified pattern
fopen()   Opens a file or URL
fpassthru()   Reads from the current position in a file - until EOF, and writes the result to the output buffer
fputcsv()   Formats a line as CSV and writes it to an open file
fputs()   Alias of fwrite()
fread()   Reads from an open file (binary-safe)
fscanf()  Parses input from an open file according to a specified format
fseek()   Seeks in an open file
fstat()   Returns information about an open file
ftell()   Returns the current position in an open file
ftruncate()   Truncates an open file to a specified length
fwrite()  Writes to an open file (binary-safe)
glob()  Returns an array of filenames / directories matching a specified pattern
is_dir()  Checks whether a file is a directory
is_executable()   Checks whether a file is executable
is_file()   Checks whether a file is a regular file
is_link()   Checks whether a file is a link
is_readable()   Checks whether a file is readable
is_uploaded_file()  Checks whether a file was uploaded via HTTP POST
is_writable()   Checks whether a file is writable
is_writeable()  Alias of is_writable()
lchgrp()  Changes the group ownership of a symbolic link
lchown()  Changes the user ownership of a symbolic link
link()  Creates a hard link
linkinfo()  Returns information about a hard link
lstat()   Returns information about a file or symbolic link
mkdir()   Creates a directory
move_uploaded_file()  Moves an uploaded file to a new location
parse_ini_file()  Parses a configuration file
parse_ini_string()  Parses a configuration string
pathinfo()  Returns information about a file path
pclose()  Closes a pipe opened by popen()
popen()   Opens a pipe
readfile()  Reads a file and writes it to the output buffer
readlink()  Returns the target of a symbolic link
realpath()  Returns the absolute pathname
realpath_cache_get()  Returns realpath cache entries
realpath_cache_size()   Returns realpath cache size
rename()  Renames a file or directory
rewind()  Rewinds a file pointer
rmdir()   Removes an empty directory
set_file_buffer()   Alias of stream_set_write_buffer(). Sets the buffer size for write operations on the given file
stat()  Returns information about a file
symlink()   Creates a symbolic link
tempnam()   Creates a unique temporary file
tmpfile()   Creates a unique temporary file
touch()   Sets access and modification time of a file
umask()   Changes file permissions for files
unlink()  Deletes a fil

PHP String
==========

Function  Description
addcslashes()   Returns a string with backslashes in front of the specified characters
addslashes()  Returns a string with backslashes in front of predefined characters
bin2hex()   Converts a string of ASCII characters to hexadecimal values
chop()  Removes whitespace or other characters from the right end of a string
chr()   Returns a character from a specified ASCII value
chunk_split()   Splits a string into a series of smaller parts
convert_cyr_string()  Converts a string from one Cyrillic character-set to another
convert_uudecode()  Decodes a uuencoded string
convert_uuencode()  Encodes a string using the uuencode algorithm
count_chars()   Returns information about characters used in a string
crc32()   Calculates a 32-bit CRC for a string
crypt()   One-way string hashing
echo()  Outputs one or more strings
explode()   Breaks a string into an array
fprintf()   Writes a formatted string to a specified output stream
get_html_translation_table()  Returns the translation table used by htmlspecialchars() and htmlentities()
hebrev()  Converts Hebrew text to visual text
hebrevc()   Converts Hebrew text to visual text and new lines (\n) into <br>
hex2bin()   Converts a string of hexadecimal values to ASCII characters
html_entity_decode()  Converts HTML entities to characters
htmlentities()  Converts characters to HTML entities
htmlspecialchars_decode()   Converts some predefined HTML entities to characters
htmlspecialchars()  Converts some predefined characters to HTML entities
implode()   Returns a string from the elements of an array
join()  Alias of implode()
lcfirst()   Converts the first character of a string to lowercase
levenshtein()   Returns the Levenshtein distance between two strings
localeconv()  Returns locale numeric and monetary formatting information
ltrim()   Removes whitespace or other characters from the left side of a string
md5()   Calculates the MD5 hash of a string
md5_file()  Calculates the MD5 hash of a file
metaphone()   Calculates the metaphone key of a string
money_format()  Returns a string formatted as a currency string
nl_langinfo()   Returns specific local information
nl2br()   Inserts HTML line breaks in front of each newline in a string
number_format()   Formats a number with grouped thousands
ord()   Returns the ASCII value of the first character of a string
parse_str()   Parses a query string into variables
print()   Outputs one or more strings
printf()  Outputs a formatted string
quoted_printable_decode()   Converts a quoted-printable string to an 8-bit string
quoted_printable_encode()   Converts an 8-bit string to a quoted printable string
quotemeta()   Quotes meta characters
rtrim()   Removes whitespace or other characters from the right side of a string
setlocale()   Sets locale information
sha1()  Calculates the SHA-1 hash of a string
sha1_file()   Calculates the SHA-1 hash of a file
similar_text()  Calculates the similarity between two strings
soundex()   Calculates the soundex key of a string
sprintf()   Writes a formatted string to a variable
sscanf()  Parses input from a string according to a format
str_getcsv()  Parses a CSV string into an array
str_ireplace()  Replaces some characters in a string (case-insensitive)
str_pad()   Pads a string to a new length
str_repeat()  Repeats a string a specified number of times
str_replace()   Replaces some characters in a string (case-sensitive)
str_rot13()   Performs the ROT13 encoding on a string
str_shuffle()   Randomly shuffles all characters in a string
str_split()   Splits a string into an array
str_word_count()  Count the number of words in a string
strcasecmp()  Compares two strings (case-insensitive)
strchr()  Finds the first occurrence of a string inside another string (alias of strstr())
strcmp()  Compares two strings (case-sensitive)
strcoll()   Compares two strings (locale based string comparison)
strcspn()   Returns the number of characters found in a string before any part of some specified characters are found
strip_tags()  Strips HTML and PHP tags from a string
stripcslashes()   Unquotes a string quoted with addcslashes()
stripslashes()  Unquotes a string quoted with addslashes()
stripos()   Returns the position of the first occurrence of a string inside another string (case-insensitive)
stristr()   Finds the first occurrence of a string inside another string (case-insensitive)
strlen()  Returns the length of a string
strnatcasecmp()   Compares two strings using a "natural order" algorithm (case-insensitive)
strnatcmp()   Compares two strings using a "natural order" algorithm (case-sensitive)
strncasecmp()   String comparison of the first n characters (case-insensitive)
strncmp()   String comparison of the first n characters (case-sensitive)
strpbrk()   Searches a string for any of a set of characters
strpos()  Returns the position of the first occurrence of a string inside another string (case-sensitive)
strrchr()   Finds the last occurrence of a string inside another string
strrev()  Reverses a string
strripos()  Finds the position of the last occurrence of a string inside another string (case-insensitive)
strrpos()   Finds the position of the last occurrence of a string inside another string (case-sensitive)
strspn()  Returns the number of characters found in a string that contains only characters from a specified charlist
strstr()  Finds the first occurrence of a string inside another string (case-sensitive)
strtok()  Splits a string into smaller strings
strtolower()  Converts a string to lowercase letters
strtoupper()  Converts a string to uppercase letters
strtr()   Translates certain characters in a string
substr()  Returns a part of a string
substr_compare()  Compares two strings from a specified start position (binary safe and optionally case-sensitive)
substr_count()  Counts the number of times a substring occurs in a string
substr_replace()  Replaces a part of a string with another string
trim()  Removes whitespace or other characters from both sides of a string
ucfirst()   Converts the first character of a string to uppercase
ucwords()   Converts the first character of each word in a string to uppercase
vfprintf()  Writes a formatted string to a specified output stream
vprintf()   Outputs a formatted string
vsprintf()  Writes a formatted string to a variable
wordwrap()  Wraps a string to a given number of characters

PHP Network 
===========

Function  Description
checkdnsrr()  Checks DNS records for type corresponding to host
closelog()  Closes the connection of system logger
define_syslog_variables()   Deprecated and removed in PHP 5.4. Initializes the variables used in syslog functions
dns_check_record()  Alias of checkdnsrr()
dns_get_mx()  Alias of getmxrr()
dns_get_record()  Gets the DNS resource records associated with the specified hostname
fsockopen()   Opens an Internet or Unix domain socket connection
gethostbyaddr()   Returns the domain name for a given IP address
gethostbyname()   Returns the IPv4 address for a given domain/host name
gethostbynamel()  Returns a list of IPv4 address for a given domain/host name
gethostname()   Returns the host name
getmxrr()   Returns the MX records for the specified internet host name
getprotobyname()  Returns the protocol number for a given protocol name
getprotobynumber()        Returns the protocol name for a given protocol number
getservbyname()   Returns the port number for a given Internet service and protocol
getservbyport()   Returns the Internet service for a given port and protocol
header_register_callback()  Calls a header function
header_remove()   Removes an HTTP header previously set with the header() function
header()  Sends a raw HTTP header to a client
headers_list()  Returns a list of response headers to be sent to the browser
headers_sent()  Checks if/where headers have been sent
http_response_code()  Sets or returns the HTTP response status code
inet_ntop()   Converts a 32bit IPv4 or 128bit IPv6 address into a readable format
inet_pton()   Converts a readable IP address into a packed 32bit IPv4 or 128bit IPv6 format
ip2long()   Converts an IPv4 address into a long integer
long2ip()   Converts a long integer address into a string in IPv4 format
openlog()   Opens the connection of system logger
pfsockopen()  Opens a persistent Internet or Unix domain socket connection
setcookie()   Defines a cookie to be sent along with the rest of the HTTP headers
setrawcookie()  Defines a cookie (without URL encoding) to be sent along with the rest of the HTTP headers
socket_get_status()   Alias of stream_get_meta_data()
socket_set_blocking()   Alias of stream_set_blocking()
socket_set_timeout()  Alias of stream_set_timeout()
syslog()  Generates a system log message

mySQLi functions
================

Function  Description
affected_rows()   Returns the number of affected rows in the previous MySQL operation
autocommit()  Turns on or off auto-committing database modifications
begin_transaction()   Starts a transaction
change_user()   Changes the user of the specified database connection
character_set_name()  Returns the default character set for the database connection
close()   Closes a previously opened database connection
commit()  Commits the current transaction
connect()   Opens a new connection to the MySQL server
connect_errno()   Returns the error code from the last connection error
connect_error()   Returns the error description from the last connection error
data_seek()   Adjusts the result pointer to an arbitrary row in the result-set
debug()   Performs debugging operations
dump_debug_info()   Dumps debugging info into the log
errno()   Returns the last error code for the most recent function call
error()   Returns the last error description for the most recent function call
error_list()  Returns a list of errors for the most recent function call
fetch_all()   Fetches all result rows as an associative array, a numeric array, or both
fetch_array()   Fetches a result row as an associative, a numeric array, or both
fetch_assoc()   Fetches a result row as an associative array
fetch_field()   Returns the next field in the result-set, as an object
fetch_field_direct()  Returns meta-data for a single field in the result-set, as an object
fetch_fields()  Returns an array of objects that represent the fields in a result-set
fetch_lengths()   Returns the lengths of the columns of the current row in the result-set
fetch_object()  Returns the current row of a result-set, as an object
fetch_row()   Fetches one row from a result-set and returns it as an enumerated array
field_count()   Returns the number of columns for the most recent query
field_seek()  Sets the field cursor to the given field offset
get_charset()   Returns a character set object
get_client_info()   Returns the MySQL client library version
get_client_stats()  Returns statistics about client per-process
get_client_version()  Returns the MySQL client library version as an integer
get_connection_stats()  Returns statistics about the client connection
get_host_info()   Returns the MySQL server hostname and the connection type
get_proto_info()  Returns the MySQL protocol version
get_server_info()   Returns the MySQL server version
get_server_version()  Returns the MySQL server version as an integer
info()  Returns information about the last executed query
init()  Initializes MySQLi and returns a resource for use with real_connect()
insert_id()   Returns the auto-generated id from the last query
kill()  Asks the server to kill a MySQL thread
more_results()  Checks if there are more results from a multi query
multi_query()   Performs one or more queries on the database
next_result()   Prepares the next result-set from multi_query()
options()   Sets extra connect options and affect behavior for a connection
ping()  Pings a server connection, or tries to reconnect if the connection has gone down
poll()  Polls connections
prepare()   Prepares an SQL statement for execution
query()   Performs a query against a database
real_connect()  Opens a new connection to the MySQL server
real_escape_string()  Escapes special characters in a string for use in an SQL statement
real_query()  Executes a single SQL query
reap_async_query()  Returns result from an async SQL query
refresh()   Refreshes/flushes tables or caches, or resets the replication server information
rollback()  Rolls back the current transaction for the database
select_db()   Select the default database for database queries
set_charset()   Sets the default client character set
set_local_infile_default()  Unsets user defined handler for load local infile command
set_local_infile_handler()  Set callback function for LOAD DATA LOCAL INFILE command
sqlstate()  Returns the SQLSTATE error code for the error
ssl_set()   Used to establish secure connections using SSL
stat()  Returns the current system status
stmt_init()   Initializes a statement and returns an object for use with stmt_prepare()
store_result()  Transfers a result-set from the last query
thread_id()   Returns the thread ID for the current connection
thread_safe()   Returns whether the client library is compiled as thread-safe
use_result()  Initiates the retrieval of a result-set from the last query executed
warning_count()   Returns the number of warnings from the last query in the connection
---


PHP Forms
=========


